/*
 * This file is generated by jOOQ.
 */
package com.frank.testData.generated;


import com.frank.testData.generated.tables.TPatrolSystemCheckContent;
import com.frank.testData.generated.tables.TPatrolSystemCheckRecord;
import com.frank.testData.generated.tables.TPatrolSystemDevice;
import com.frank.testData.generated.tables.TPatrolSystemMappingScheduleDevice;
import com.frank.testData.generated.tables.TPatrolSystemMappingUserShift;
import com.frank.testData.generated.tables.TPatrolSystemSchedule;
import com.frank.testData.generated.tables.TPatrolSystemScheduleRecord;
import com.frank.testData.generated.tables.TPatrolSystemScheduleShift;
import com.frank.testData.generated.tables.TPatrolSystemShiftRecord;
import com.frank.testData.generated.tables.TPatrolSystemUser;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TPatrolsystem extends SchemaImpl {

    private static final long serialVersionUID = 380496034;

    /**
     * The reference instance of <code>t_patrolsystem</code>
     */
    public static final TPatrolsystem T_PATROLSYSTEM = new TPatrolsystem();

    /**
     * 检查内容表
     */
    public final TPatrolSystemCheckContent T_PATROL_SYSTEM_CHECK_CONTENT = com.frank.testData.generated.tables.TPatrolSystemCheckContent.T_PATROL_SYSTEM_CHECK_CONTENT;

    /**
     * 检查内容的记录

     */
    public final TPatrolSystemCheckRecord T_PATROL_SYSTEM_CHECK_RECORD = com.frank.testData.generated.tables.TPatrolSystemCheckRecord.T_PATROL_SYSTEM_CHECK_RECORD;

    /**
     * 巡检机设备
     */
    public final TPatrolSystemDevice T_PATROL_SYSTEM_DEVICE = com.frank.testData.generated.tables.TPatrolSystemDevice.T_PATROL_SYSTEM_DEVICE;

    /**
     * 巡检排班_巡检机_映射表
     */
    public final TPatrolSystemMappingScheduleDevice T_PATROL_SYSTEM_MAPPING_SCHEDULE_DEVICE = com.frank.testData.generated.tables.TPatrolSystemMappingScheduleDevice.T_PATROL_SYSTEM_MAPPING_SCHEDULE_DEVICE;

    /**
     * 用户_巡检排班周期_映射表
     */
    public final TPatrolSystemMappingUserShift T_PATROL_SYSTEM_MAPPING_USER_SHIFT = com.frank.testData.generated.tables.TPatrolSystemMappingUserShift.T_PATROL_SYSTEM_MAPPING_USER_SHIFT;

    /**
     * 巡检排班
     */
    public final TPatrolSystemSchedule T_PATROL_SYSTEM_SCHEDULE = com.frank.testData.generated.tables.TPatrolSystemSchedule.T_PATROL_SYSTEM_SCHEDULE;

    /**
     * 巡检记录
     */
    public final TPatrolSystemScheduleRecord T_PATROL_SYSTEM_SCHEDULE_RECORD = com.frank.testData.generated.tables.TPatrolSystemScheduleRecord.T_PATROL_SYSTEM_SCHEDULE_RECORD;

    /**
     * 巡检排班周期表 巡检排班的具体的任务
     */
    public final TPatrolSystemScheduleShift T_PATROL_SYSTEM_SCHEDULE_SHIFT = com.frank.testData.generated.tables.TPatrolSystemScheduleShift.T_PATROL_SYSTEM_SCHEDULE_SHIFT;

    /**
     * 巡检地点记录
     */
    public final TPatrolSystemShiftRecord T_PATROL_SYSTEM_SHIFT_RECORD = com.frank.testData.generated.tables.TPatrolSystemShiftRecord.T_PATROL_SYSTEM_SHIFT_RECORD;

    /**
     * 巡检机_用户
     */
    public final TPatrolSystemUser T_PATROL_SYSTEM_USER = com.frank.testData.generated.tables.TPatrolSystemUser.T_PATROL_SYSTEM_USER;

    /**
     * No further instances allowed
     */
    private TPatrolsystem() {
        super("t_patrolsystem", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            TPatrolSystemCheckContent.T_PATROL_SYSTEM_CHECK_CONTENT,
            TPatrolSystemCheckRecord.T_PATROL_SYSTEM_CHECK_RECORD,
            TPatrolSystemDevice.T_PATROL_SYSTEM_DEVICE,
            TPatrolSystemMappingScheduleDevice.T_PATROL_SYSTEM_MAPPING_SCHEDULE_DEVICE,
            TPatrolSystemMappingUserShift.T_PATROL_SYSTEM_MAPPING_USER_SHIFT,
            TPatrolSystemSchedule.T_PATROL_SYSTEM_SCHEDULE,
            TPatrolSystemScheduleRecord.T_PATROL_SYSTEM_SCHEDULE_RECORD,
            TPatrolSystemScheduleShift.T_PATROL_SYSTEM_SCHEDULE_SHIFT,
            TPatrolSystemShiftRecord.T_PATROL_SYSTEM_SHIFT_RECORD,
            TPatrolSystemUser.T_PATROL_SYSTEM_USER);
    }
}
