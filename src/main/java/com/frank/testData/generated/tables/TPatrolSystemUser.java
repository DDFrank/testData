/*
 * This file is generated by jOOQ.
 */
package com.frank.testData.generated.tables;


import com.frank.testData.generated.Indexes;
import com.frank.testData.generated.Keys;
import com.frank.testData.generated.TPatrolsystem;
import com.frank.testData.generated.tables.records.TPatrolSystemUserRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 巡检机_用户
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TPatrolSystemUser extends TableImpl<TPatrolSystemUserRecord> {

    private static final long serialVersionUID = 700345568;

    /**
     * The reference instance of <code>t_patrolsystem.t_patrol_system_user</code>
     */
    public static final TPatrolSystemUser T_PATROL_SYSTEM_USER = new TPatrolSystemUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TPatrolSystemUserRecord> getRecordType() {
        return TPatrolSystemUserRecord.class;
    }

    /**
     * The column <code>t_patrolsystem.t_patrol_system_user.id</code>. 非业务主键
     */
    public final TableField<TPatrolSystemUserRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "非业务主键");

    /**
     * The column <code>t_patrolsystem.t_patrol_system_user.update_by</code>. 更新者
     */
    public final TableField<TPatrolSystemUserRecord, Long> UPDATE_BY = createField("update_by", org.jooq.impl.SQLDataType.BIGINT, this, "更新者");

    /**
     * The column <code>t_patrolsystem.t_patrol_system_user.update_time</code>. 更新时间
     */
    public final TableField<TPatrolSystemUserRecord, Long> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.BIGINT, this, "更新时间");

    /**
     * The column <code>t_patrolsystem.t_patrol_system_user.admin</code>. 是否是管理员 0 : 普通用户 1 : 管理员
     */
    public final TableField<TPatrolSystemUserRecord, Boolean> ADMIN = createField("admin", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "是否是管理员 0 : 普通用户 1 : 管理员");

    /**
     * The column <code>t_patrolsystem.t_patrol_system_user.org_id</code>. 组织Id
     */
    public final TableField<TPatrolSystemUserRecord, Long> ORG_ID = createField("org_id", org.jooq.impl.SQLDataType.BIGINT, this, "组织Id");

    /**
     * The column <code>t_patrolsystem.t_patrol_system_user.org_name</code>. 组织名
     */
    public final TableField<TPatrolSystemUserRecord, String> ORG_NAME = createField("org_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "组织名");

    /**
     * The column <code>t_patrolsystem.t_patrol_system_user.user_avatar</code>. 用户头像
     */
    public final TableField<TPatrolSystemUserRecord, String> USER_AVATAR = createField("user_avatar", org.jooq.impl.SQLDataType.VARCHAR(255), this, "用户头像");

    /**
     * The column <code>t_patrolsystem.t_patrol_system_user.user_empno</code>. 工号
     */
    public final TableField<TPatrolSystemUserRecord, String> USER_EMPNO = createField("user_empno", org.jooq.impl.SQLDataType.VARCHAR(255), this, "工号");

    /**
     * The column <code>t_patrolsystem.t_patrol_system_user.user_id</code>. 得力e+系统的用户主键(可能重复)
     */
    public final TableField<TPatrolSystemUserRecord, Long> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.BIGINT, this, "得力e+系统的用户主键(可能重复)");

    /**
     * The column <code>t_patrolsystem.t_patrol_system_user.user_name</code>. 用户姓名
     */
    public final TableField<TPatrolSystemUserRecord, String> USER_NAME = createField("user_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "用户姓名");

    /**
     * The column <code>t_patrolsystem.t_patrol_system_user.status</code>. 用户状态 0 : 失效 1: 有效
     */
    public final TableField<TPatrolSystemUserRecord, Boolean> STATUS = createField("status", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "用户状态 0 : 失效 1: 有效");

    /**
     * Create a <code>t_patrolsystem.t_patrol_system_user</code> table reference
     */
    public TPatrolSystemUser() {
        this(DSL.name("t_patrol_system_user"), null);
    }

    /**
     * Create an aliased <code>t_patrolsystem.t_patrol_system_user</code> table reference
     */
    public TPatrolSystemUser(String alias) {
        this(DSL.name(alias), T_PATROL_SYSTEM_USER);
    }

    /**
     * Create an aliased <code>t_patrolsystem.t_patrol_system_user</code> table reference
     */
    public TPatrolSystemUser(Name alias) {
        this(alias, T_PATROL_SYSTEM_USER);
    }

    private TPatrolSystemUser(Name alias, Table<TPatrolSystemUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private TPatrolSystemUser(Name alias, Table<TPatrolSystemUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("巡检机_用户"));
    }

    public <O extends Record> TPatrolSystemUser(Table<O> child, ForeignKey<O, TPatrolSystemUserRecord> key) {
        super(child, key, T_PATROL_SYSTEM_USER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return TPatrolsystem.T_PATROLSYSTEM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_PATROL_SYSTEM_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TPatrolSystemUserRecord> getPrimaryKey() {
        return Keys.KEY_T_PATROL_SYSTEM_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TPatrolSystemUserRecord>> getKeys() {
        return Arrays.<UniqueKey<TPatrolSystemUserRecord>>asList(Keys.KEY_T_PATROL_SYSTEM_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TPatrolSystemUser as(String alias) {
        return new TPatrolSystemUser(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TPatrolSystemUser as(Name alias) {
        return new TPatrolSystemUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TPatrolSystemUser rename(String name) {
        return new TPatrolSystemUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TPatrolSystemUser rename(Name name) {
        return new TPatrolSystemUser(name, null);
    }
}
