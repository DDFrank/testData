/*
 * This file is generated by jOOQ.
 */
package com.frank.testData.generated.tables;


import com.frank.testData.generated.Indexes;
import com.frank.testData.generated.Keys;
import com.frank.testData.generated.TPatrolsystem;
import com.frank.testData.generated.tables.records.TPatrolSystemDeviceRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 巡检机设备
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TPatrolSystemDevice extends TableImpl<TPatrolSystemDeviceRecord> {

    private static final long serialVersionUID = 1247528508;

    /**
     * The reference instance of <code>t_patrolsystem.t_patrol_system_device</code>
     */
    public static final TPatrolSystemDevice T_PATROL_SYSTEM_DEVICE = new TPatrolSystemDevice();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TPatrolSystemDeviceRecord> getRecordType() {
        return TPatrolSystemDeviceRecord.class;
    }

    /**
     * The column <code>t_patrolsystem.t_patrol_system_device.id</code>.
     */
    public final TableField<TPatrolSystemDeviceRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>t_patrolsystem.t_patrol_system_device.update_by</code>.
     */
    public final TableField<TPatrolSystemDeviceRecord, Long> UPDATE_BY = createField("update_by", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>t_patrolsystem.t_patrol_system_device.update_time</code>.
     */
    public final TableField<TPatrolSystemDeviceRecord, Long> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>t_patrolsystem.t_patrol_system_device.sn_code</code>. 设备的sn码
     */
    public final TableField<TPatrolSystemDeviceRecord, String> SN_CODE = createField("sn_code", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "设备的sn码");

    /**
     * The column <code>t_patrolsystem.t_patrol_system_device.device_location</code>. 设备的安装地点
     */
    public final TableField<TPatrolSystemDeviceRecord, String> DEVICE_LOCATION = createField("device_location", org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "设备的安装地点");

    /**
     * The column <code>t_patrolsystem.t_patrol_system_device.org_id</code>. 设备所属的组织Id
     */
    public final TableField<TPatrolSystemDeviceRecord, Long> ORG_ID = createField("org_id", org.jooq.impl.SQLDataType.BIGINT, this, "设备所属的组织Id");

    /**
     * The column <code>t_patrolsystem.t_patrol_system_device.status</code>. 设备的状态 0 未激活 1 已激活
     */
    public final TableField<TPatrolSystemDeviceRecord, Boolean> STATUS = createField("status", org.jooq.impl.SQLDataType.BIT, this, "设备的状态 0 未激活 1 已激活");

    /**
     * The column <code>t_patrolsystem.t_patrol_system_device.bluetooth_name</code>.
     */
    public final TableField<TPatrolSystemDeviceRecord, String> BLUETOOTH_NAME = createField("bluetooth_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>t_patrolsystem.t_patrol_system_device.device_name</code>.
     */
    public final TableField<TPatrolSystemDeviceRecord, String> DEVICE_NAME = createField("device_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>t_patrolsystem.t_patrol_system_device.product_model</code>.
     */
    public final TableField<TPatrolSystemDeviceRecord, String> PRODUCT_MODEL = createField("product_model", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>t_patrolsystem.t_patrol_system_device</code> table reference
     */
    public TPatrolSystemDevice() {
        this(DSL.name("t_patrol_system_device"), null);
    }

    /**
     * Create an aliased <code>t_patrolsystem.t_patrol_system_device</code> table reference
     */
    public TPatrolSystemDevice(String alias) {
        this(DSL.name(alias), T_PATROL_SYSTEM_DEVICE);
    }

    /**
     * Create an aliased <code>t_patrolsystem.t_patrol_system_device</code> table reference
     */
    public TPatrolSystemDevice(Name alias) {
        this(alias, T_PATROL_SYSTEM_DEVICE);
    }

    private TPatrolSystemDevice(Name alias, Table<TPatrolSystemDeviceRecord> aliased) {
        this(alias, aliased, null);
    }

    private TPatrolSystemDevice(Name alias, Table<TPatrolSystemDeviceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("巡检机设备"));
    }

    public <O extends Record> TPatrolSystemDevice(Table<O> child, ForeignKey<O, TPatrolSystemDeviceRecord> key) {
        super(child, key, T_PATROL_SYSTEM_DEVICE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return TPatrolsystem.T_PATROLSYSTEM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_PATROL_SYSTEM_DEVICE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TPatrolSystemDeviceRecord> getPrimaryKey() {
        return Keys.KEY_T_PATROL_SYSTEM_DEVICE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TPatrolSystemDeviceRecord>> getKeys() {
        return Arrays.<UniqueKey<TPatrolSystemDeviceRecord>>asList(Keys.KEY_T_PATROL_SYSTEM_DEVICE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TPatrolSystemDevice as(String alias) {
        return new TPatrolSystemDevice(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TPatrolSystemDevice as(Name alias) {
        return new TPatrolSystemDevice(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TPatrolSystemDevice rename(String name) {
        return new TPatrolSystemDevice(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TPatrolSystemDevice rename(Name name) {
        return new TPatrolSystemDevice(name, null);
    }
}
