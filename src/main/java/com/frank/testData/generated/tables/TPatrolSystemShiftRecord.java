/*
 * This file is generated by jOOQ.
 */
package com.frank.testData.generated.tables;


import com.frank.testData.generated.Indexes;
import com.frank.testData.generated.Keys;
import com.frank.testData.generated.TPatrolsystem;
import com.frank.testData.generated.tables.records.TPatrolSystemShiftRecordRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 巡检地点记录
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TPatrolSystemShiftRecord extends TableImpl<TPatrolSystemShiftRecordRecord> {

    private static final long serialVersionUID = -655707813;

    /**
     * The reference instance of <code>t_patrolsystem.t_patrol_system_shift_record</code>
     */
    public static final TPatrolSystemShiftRecord T_PATROL_SYSTEM_SHIFT_RECORD = new TPatrolSystemShiftRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TPatrolSystemShiftRecordRecord> getRecordType() {
        return TPatrolSystemShiftRecordRecord.class;
    }

    /**
     * The column <code>t_patrolsystem.t_patrol_system_shift_record.id</code>.
     */
    public final TableField<TPatrolSystemShiftRecordRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>t_patrolsystem.t_patrol_system_shift_record.update_by</code>.
     */
    public final TableField<TPatrolSystemShiftRecordRecord, Long> UPDATE_BY = createField("update_by", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>t_patrolsystem.t_patrol_system_shift_record.update_time</code>.
     */
    public final TableField<TPatrolSystemShiftRecordRecord, Long> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>t_patrolsystem.t_patrol_system_shift_record.check_time</code>. 巡检时间
     */
    public final TableField<TPatrolSystemShiftRecordRecord, Long> CHECK_TIME = createField("check_time", org.jooq.impl.SQLDataType.BIGINT, this, "巡检时间");

    /**
     * The column <code>t_patrolsystem.t_patrol_system_shift_record.status</code>. 0 未开始 1 已完成 2 执行中 3 失败 4 异常
     */
    public final TableField<TPatrolSystemShiftRecordRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER, this, "0 未开始 1 已完成 2 执行中 3 失败 4 异常");

    /**
     * The column <code>t_patrolsystem.t_patrol_system_shift_record.schedule_record_id</code>. 巡检记录主键
     */
    public final TableField<TPatrolSystemShiftRecordRecord, Long> SCHEDULE_RECORD_ID = createField("schedule_record_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "巡检记录主键");

    /**
     * The column <code>t_patrolsystem.t_patrol_system_shift_record.device_id</code>. 巡检机主键
     */
    public final TableField<TPatrolSystemShiftRecordRecord, Long> DEVICE_ID = createField("device_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "巡检机主键");

    /**
     * Create a <code>t_patrolsystem.t_patrol_system_shift_record</code> table reference
     */
    public TPatrolSystemShiftRecord() {
        this(DSL.name("t_patrol_system_shift_record"), null);
    }

    /**
     * Create an aliased <code>t_patrolsystem.t_patrol_system_shift_record</code> table reference
     */
    public TPatrolSystemShiftRecord(String alias) {
        this(DSL.name(alias), T_PATROL_SYSTEM_SHIFT_RECORD);
    }

    /**
     * Create an aliased <code>t_patrolsystem.t_patrol_system_shift_record</code> table reference
     */
    public TPatrolSystemShiftRecord(Name alias) {
        this(alias, T_PATROL_SYSTEM_SHIFT_RECORD);
    }

    private TPatrolSystemShiftRecord(Name alias, Table<TPatrolSystemShiftRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private TPatrolSystemShiftRecord(Name alias, Table<TPatrolSystemShiftRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("巡检地点记录"));
    }

    public <O extends Record> TPatrolSystemShiftRecord(Table<O> child, ForeignKey<O, TPatrolSystemShiftRecordRecord> key) {
        super(child, key, T_PATROL_SYSTEM_SHIFT_RECORD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return TPatrolsystem.T_PATROLSYSTEM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_PATROL_SYSTEM_SHIFT_RECORD_FK_SHIFT_RECORD_SCHEDUAL_RECORD, Indexes.T_PATROL_SYSTEM_SHIFT_RECORD_FK_SHIF_RECORD_DEVICE, Indexes.T_PATROL_SYSTEM_SHIFT_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TPatrolSystemShiftRecordRecord> getPrimaryKey() {
        return Keys.KEY_T_PATROL_SYSTEM_SHIFT_RECORD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TPatrolSystemShiftRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<TPatrolSystemShiftRecordRecord>>asList(Keys.KEY_T_PATROL_SYSTEM_SHIFT_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TPatrolSystemShiftRecord as(String alias) {
        return new TPatrolSystemShiftRecord(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TPatrolSystemShiftRecord as(Name alias) {
        return new TPatrolSystemShiftRecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TPatrolSystemShiftRecord rename(String name) {
        return new TPatrolSystemShiftRecord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TPatrolSystemShiftRecord rename(Name name) {
        return new TPatrolSystemShiftRecord(name, null);
    }
}
