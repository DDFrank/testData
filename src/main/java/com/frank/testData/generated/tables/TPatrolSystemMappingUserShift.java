/*
 * This file is generated by jOOQ.
 */
package com.frank.testData.generated.tables;


import com.frank.testData.generated.Indexes;
import com.frank.testData.generated.Keys;
import com.frank.testData.generated.TPatrolsystem;
import com.frank.testData.generated.tables.records.TPatrolSystemMappingUserShiftRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 用户_巡检排班周期_映射表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TPatrolSystemMappingUserShift extends TableImpl<TPatrolSystemMappingUserShiftRecord> {

    private static final long serialVersionUID = 1016185517;

    /**
     * The reference instance of <code>t_patrolsystem.t_patrol_system_mapping_user_shift</code>
     */
    public static final TPatrolSystemMappingUserShift T_PATROL_SYSTEM_MAPPING_USER_SHIFT = new TPatrolSystemMappingUserShift();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TPatrolSystemMappingUserShiftRecord> getRecordType() {
        return TPatrolSystemMappingUserShiftRecord.class;
    }

    /**
     * The column <code>t_patrolsystem.t_patrol_system_mapping_user_shift.id</code>.
     */
    public final TableField<TPatrolSystemMappingUserShiftRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>t_patrolsystem.t_patrol_system_mapping_user_shift.update_by</code>.
     */
    public final TableField<TPatrolSystemMappingUserShiftRecord, Long> UPDATE_BY = createField("update_by", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>t_patrolsystem.t_patrol_system_mapping_user_shift.update_time</code>.
     */
    public final TableField<TPatrolSystemMappingUserShiftRecord, Long> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>t_patrolsystem.t_patrol_system_mapping_user_shift.user_id</code>. 用户id
     */
    public final TableField<TPatrolSystemMappingUserShiftRecord, Long> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "用户id");

    /**
     * The column <code>t_patrolsystem.t_patrol_system_mapping_user_shift.shift_id</code>. 巡检排班周期id
     */
    public final TableField<TPatrolSystemMappingUserShiftRecord, Long> SHIFT_ID = createField("shift_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "巡检排班周期id");

    /**
     * Create a <code>t_patrolsystem.t_patrol_system_mapping_user_shift</code> table reference
     */
    public TPatrolSystemMappingUserShift() {
        this(DSL.name("t_patrol_system_mapping_user_shift"), null);
    }

    /**
     * Create an aliased <code>t_patrolsystem.t_patrol_system_mapping_user_shift</code> table reference
     */
    public TPatrolSystemMappingUserShift(String alias) {
        this(DSL.name(alias), T_PATROL_SYSTEM_MAPPING_USER_SHIFT);
    }

    /**
     * Create an aliased <code>t_patrolsystem.t_patrol_system_mapping_user_shift</code> table reference
     */
    public TPatrolSystemMappingUserShift(Name alias) {
        this(alias, T_PATROL_SYSTEM_MAPPING_USER_SHIFT);
    }

    private TPatrolSystemMappingUserShift(Name alias, Table<TPatrolSystemMappingUserShiftRecord> aliased) {
        this(alias, aliased, null);
    }

    private TPatrolSystemMappingUserShift(Name alias, Table<TPatrolSystemMappingUserShiftRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("用户_巡检排班周期_映射表"));
    }

    public <O extends Record> TPatrolSystemMappingUserShift(Table<O> child, ForeignKey<O, TPatrolSystemMappingUserShiftRecord> key) {
        super(child, key, T_PATROL_SYSTEM_MAPPING_USER_SHIFT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return TPatrolsystem.T_PATROLSYSTEM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_PATROL_SYSTEM_MAPPING_USER_SHIFT_FK_SHIFT, Indexes.T_PATROL_SYSTEM_MAPPING_USER_SHIFT_FK_USER, Indexes.T_PATROL_SYSTEM_MAPPING_USER_SHIFT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TPatrolSystemMappingUserShiftRecord> getPrimaryKey() {
        return Keys.KEY_T_PATROL_SYSTEM_MAPPING_USER_SHIFT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TPatrolSystemMappingUserShiftRecord>> getKeys() {
        return Arrays.<UniqueKey<TPatrolSystemMappingUserShiftRecord>>asList(Keys.KEY_T_PATROL_SYSTEM_MAPPING_USER_SHIFT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TPatrolSystemMappingUserShift as(String alias) {
        return new TPatrolSystemMappingUserShift(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TPatrolSystemMappingUserShift as(Name alias) {
        return new TPatrolSystemMappingUserShift(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TPatrolSystemMappingUserShift rename(String name) {
        return new TPatrolSystemMappingUserShift(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TPatrolSystemMappingUserShift rename(Name name) {
        return new TPatrolSystemMappingUserShift(name, null);
    }
}
